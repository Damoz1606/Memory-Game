@import url("https://fonts.googleapis.com/css?family=Rubik&display=swap");

:root {
    --primary-color: #b0ff13;
    --secondary-color: #232534;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--primary-color);
    font-family: 'rubik', sans-serif;
}

.container {
    padding: 30px;
    width: 380px;
    background-color: var(--secondary-color);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 5px;
    padding-bottom: 30px;
}

.container h2 {
    text-align: center;
    font-size: 17px;
    letter-spacing: 2px;
    color: white;
    margin-top: 3px;
    text-transform: uppercase;
}

.container h6 {
    text-align: end;
    letter-spacing: 2px;
    color: white;
    margin-top: 3px;
    text-transform: uppercase;
}

.container .reset-btn {
    all: unset;
    height: 40px;
    width: 120px;
    background: var(--primary-color);
    color: var(--secondary-color);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 3px;
    margin: auto;
    margin-top: 18px;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 12px;
    font-weight: bold;
    cursor: pointer;
}

.container .game {
    width: 100%;
    height: 350px;
    margin-top: 25px;
    display: flex;
    flex-wrap: wrap;
    gap: 7px;
    transform-style: preserve-3d;
    perspective: 500px;
}

.item {
    position: relative;
    height: 74px;
    width: 74px;
    background: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 25px;
    transition: all .25s;
    transform: rotateY(180deg);
    border-radius: 5px !important;
}

.item.boxOpen {
    transform: rotate(0deg);
}

.item::after {
    content: "";
    position: absolute;
    inset: 0;
    background: var(--primary-color);
    transition: all .25s;
    transform: rotateY(0deg);
    backface-visibility: hidden;
    border-radius: 5px;
}

.boxOpen::after,
.boxMatch::after {
    transform: rotateY(180deg);
}

::selection {
    background: white;
    color: var(--secondary-color);
}